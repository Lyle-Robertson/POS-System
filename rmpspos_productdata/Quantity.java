/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package rmpspos_productdata;

import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static rmpspos_productdata.Edit.oldDesc;
import static rmpspos_productdata.RMPSPOS_Home.SavingChangesToFile;
import static rmpspos_productdata.RMPSPOS_Home.products;

/**
 *
 * @author lance
 */
public class Quantity extends javax.swing.JPanel {
    
    static Dimension scrnSize = Toolkit.getDefaultToolkit().getScreenSize();
    static Rectangle winSize = GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();
    static int taskBarHeight = scrnSize.height - winSize.height;
    /**
     * Creates new form Quantity
     */
    public Quantity() {
        initComponents();
        fillTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        StockTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Desc1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        Desc2 = new javax.swing.JLabel();
        DecreaseQTY1 = new javax.swing.JButton();
        IncreaseQTY1 = new javax.swing.JButton();
        DecreaseQTY2 = new javax.swing.JButton();
        IncreaseQTY2 = new javax.swing.JButton();
        StkQty = new javax.swing.JTextField();
        InvQty = new javax.swing.JTextField();
        SaveInventoryChanges = new javax.swing.JButton();
        SaveStockChanges = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setPreferredSize(new java.awt.Dimension(scrnSize.width -150, scrnSize.height - taskBarHeight));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(((scrnSize.width -180)/2 - 3), 50));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("PRODUCTS' INVENTORY RUNNING LOW");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(((scrnSize.width -180)/2 - 3), 50));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setText("PRODUCTS' STOCK RUNNING LOW");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIPTION", "INV QTY"
            }
        ));
        InventoryTable.setRowHeight(30);
        InventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(InventoryTable);
        if (InventoryTable.getColumnModel().getColumnCount() > 0) {
            InventoryTable.getColumnModel().getColumn(0).setPreferredWidth(480);
            InventoryTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        StockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIPTION", "STK QTY"
            }
        ));
        StockTable.setRowHeight(30);
        StockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(StockTable);
        if (StockTable.getColumnModel().getColumnCount() > 0) {
            StockTable.getColumnModel().getColumn(0).setPreferredWidth(480);
            StockTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setPreferredSize(new java.awt.Dimension(((scrnSize.width -180)/2 - 3), 50));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("ADJUST INV QUANTITY");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 82, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 82, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 13, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 14, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setPreferredSize(new java.awt.Dimension(((scrnSize.width -180)/2 - 3), 50));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("ADJUST STOCK QUANTITY");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 82, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addGap(0, 82, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 13, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addGap(0, 14, Short.MAX_VALUE)))
        );

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(255, 255, 255)));

        Desc1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        Desc1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Desc1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Desc1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(255, 255, 255)));

        Desc2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        Desc2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Desc2, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Desc2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        DecreaseQTY1.setBackground(new java.awt.Color(204, 0, 0));
        DecreaseQTY1.setText("-");
        DecreaseQTY1.setPreferredSize(new java.awt.Dimension(100, 40));
        DecreaseQTY1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecreaseQTY1ActionPerformed(evt);
            }
        });

        IncreaseQTY1.setBackground(new java.awt.Color(51, 153, 0));
        IncreaseQTY1.setText("+");
        IncreaseQTY1.setPreferredSize(new java.awt.Dimension(100, 40));
        IncreaseQTY1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncreaseQTY1ActionPerformed(evt);
            }
        });

        DecreaseQTY2.setBackground(new java.awt.Color(204, 0, 0));
        DecreaseQTY2.setText("-");
        DecreaseQTY2.setPreferredSize(new java.awt.Dimension(100, 40));
        DecreaseQTY2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecreaseQTY2ActionPerformed(evt);
            }
        });

        IncreaseQTY2.setBackground(new java.awt.Color(51, 153, 0));
        IncreaseQTY2.setText("+");
        IncreaseQTY2.setPreferredSize(new java.awt.Dimension(100, 40));
        IncreaseQTY2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncreaseQTY2ActionPerformed(evt);
            }
        });

        StkQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        StkQty.setText(" ");
        StkQty.setPreferredSize(new java.awt.Dimension(40, 30));

        InvQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        InvQty.setText(" ");
        InvQty.setPreferredSize(new java.awt.Dimension(40, 30));

        SaveInventoryChanges.setBackground(new java.awt.Color(51, 102, 255));
        SaveInventoryChanges.setText("SAVE CHANGES");
        SaveInventoryChanges.setPreferredSize(new java.awt.Dimension(206, 50));
        SaveInventoryChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveInventoryChangesActionPerformed(evt);
            }
        });

        SaveStockChanges.setBackground(new java.awt.Color(51, 102, 255));
        SaveStockChanges.setText("SAVE CHANGES");
        SaveStockChanges.setPreferredSize(new java.awt.Dimension(206, 50));
        SaveStockChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveStockChangesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DecreaseQTY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SaveInventoryChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(InvQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(IncreaseQTY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(DecreaseQTY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SaveStockChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StkQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(IncreaseQTY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IncreaseQTY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DecreaseQTY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IncreaseQTY2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StkQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DecreaseQTY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InvQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SaveInventoryChanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveStockChanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void IncreaseQTY1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncreaseQTY1ActionPerformed
        // TODO add your handling code here:
        int currentQty = Integer.parseInt(InvQty.getText());
        int newQty = currentQty + 1;
        InvQty.setText(String.valueOf(newQty));
    }//GEN-LAST:event_IncreaseQTY1ActionPerformed

    private void IncreaseQTY2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncreaseQTY2ActionPerformed
        // TODO add your handling code here:
        int currentQty = Integer.parseInt(StkQty.getText());
        int newQty = currentQty + 1;
        StkQty.setText(String.valueOf(newQty));
    }//GEN-LAST:event_IncreaseQTY2ActionPerformed

    private void InventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventoryTableMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        String prodDescCodeInRow = source.getModel().getValueAt(row, 0 )+"";

        for ( int i = 0; i < products.size(); i ++){
            if (((RMPSPOS_ProductData) products.get(i)).getProdDescription().equals(prodDescCodeInRow)){
                Desc1.setText(((RMPSPOS_ProductData) products.get(i)).getProdDescription());
                InvQty.setText(String.valueOf(((RMPSPOS_ProductData) products.get(i)).getInventoryQty()));
            }
        }
    }//GEN-LAST:event_InventoryTableMouseClicked

    private void StockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockTableMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable)evt.getSource();
        int row = source.rowAtPoint( evt.getPoint() );
        String prodDescCodeInRow = source.getModel().getValueAt(row, 0 )+"";

        for ( int i = 0; i < products.size(); i ++){
            if (((RMPSPOS_ProductData) products.get(i)).getProdDescription().equals(prodDescCodeInRow)){
                Desc2.setText(((RMPSPOS_ProductData) products.get(i)).getProdDescription());
                StkQty.setText(String.valueOf(((RMPSPOS_ProductData) products.get(i)).getStockQty()));
            }
        }
    }//GEN-LAST:event_StockTableMouseClicked

    private void DecreaseQTY1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecreaseQTY1ActionPerformed
        // TODO add your handling code here:
        int currentQty = Integer.parseInt(InvQty.getText());
        int newQty = currentQty - 1;
        InvQty.setText(String.valueOf(newQty));
    }//GEN-LAST:event_DecreaseQTY1ActionPerformed

    private void DecreaseQTY2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecreaseQTY2ActionPerformed
        // TODO add your handling code here:
        int currentQty = Integer.parseInt(StkQty.getText());
        int newQty = currentQty - 1;
        StkQty.setText(String.valueOf(newQty));
    }//GEN-LAST:event_DecreaseQTY2ActionPerformed

    private void SaveInventoryChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveInventoryChangesActionPerformed
        // TODO add your handling code here:
        
        if (InvQty.getText().isBlank() || Integer.parseInt(InvQty.getText()) == 0){
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "CHECK INPUT");
        }
        else{
            int newQty = Integer.parseInt(InvQty.getText());
            String productDescription = Desc1.getText();
            

            for (int i = 0; i < products.size(); i ++){
                if (((RMPSPOS_ProductData) products.get(i)).getProdDescription().equals(productDescription)){
                    ((RMPSPOS_ProductData) products.get(i)).setInventoryQty(newQty);
                }
            }

            DefaultTableModel inventoryTable = (DefaultTableModel) InventoryTable.getModel();

            inventoryTable.setRowCount(0);
            InvQty.setText("");

            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "ACTION COMPLETE");

            fillTables();
            try {
                SavingChangesToFile();
            } catch (IOException ex) {
                Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SaveInventoryChangesActionPerformed

    private void SaveStockChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveStockChangesActionPerformed
        // TODO add your handling code here:
        
        if (StkQty.getText().isBlank() || Integer.parseInt(StkQty.getText()) == 0){
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "CHECK INPUT");
        }
        else{
            String productDescription = Desc2.getText();
            int newQty = Integer.parseInt(StkQty.getText());

            for (int i = 0; i < products.size(); i ++){
                if (((RMPSPOS_ProductData) products.get(i)).getProdDescription().equals(productDescription)){
                    ((RMPSPOS_ProductData) products.get(i)).setStockQty(newQty);
                }
            }

            DefaultTableModel stockTable = (DefaultTableModel) StockTable.getModel();

            stockTable.setRowCount(0);
            StkQty.setText("");

            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "ACTION COMPLETE");

            fillTables();
            try {
                    SavingChangesToFile();
                } catch (IOException ex) {
                    Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_SaveStockChangesActionPerformed
    
    //Fill Tables when opening Quantities tab
    public void fillTables(){
        
        DefaultTableModel Inventory = (DefaultTableModel)InventoryTable.getModel();
        DefaultTableModel Stock = (DefaultTableModel)StockTable.getModel();
        Inventory.setRowCount(0);
        Stock.setRowCount(0);
        
        int rowIndex = 0;

        for (int i = 0; i < products.size(); i ++){ 
            if (((RMPSPOS_ProductData) products.get(i)).getInventoryQty() < 10){
                String [] inventoryTableResults = { 
                    ((RMPSPOS_ProductData)products.get(i)).getProdDescription(), 
                    String.valueOf(((RMPSPOS_ProductData)products.get(i)).getInventoryQty())
                };
                Inventory.insertRow(rowIndex, inventoryTableResults);
                rowIndex ++;
            }
        }
        
        rowIndex = 0;
        for (int i = 0; i < products.size(); i ++){  
            if (((RMPSPOS_ProductData) products.get(i)).getStockQty() < 10){
                String [] StockTableResults = { 
                    ((RMPSPOS_ProductData)products.get(i)).getProdDescription(),
                    String.valueOf(((RMPSPOS_ProductData)products.get(i)).getStockQty())
                };
                Stock.insertRow(rowIndex, StockTableResults);
                rowIndex ++;
            }
        }
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DecreaseQTY1;
    private javax.swing.JButton DecreaseQTY2;
    private javax.swing.JLabel Desc1;
    private javax.swing.JLabel Desc2;
    private javax.swing.JButton IncreaseQTY1;
    private javax.swing.JButton IncreaseQTY2;
    private javax.swing.JTextField InvQty;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JButton SaveInventoryChanges;
    private javax.swing.JButton SaveStockChanges;
    private javax.swing.JTextField StkQty;
    private javax.swing.JTable StockTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
